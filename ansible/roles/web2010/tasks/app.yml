- name: Pull Secret
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Secret
      type: kubernetes.io/dockerconfigjson
      metadata:
        name: web2010-pull-secret
        namespace: "{{ openshift_namespace }}"
      data:
        .dockerconfigjson: "{{ pull_secret_config | to_json | b64encode }}"

- name: Service Account
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: web2010
        namespace: "{{ openshift_namespace }}"
      imagePullSecrets:
        - name: web2010-pull-secret

- name: Deployment
  kubernetes.core.k8s:
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: web2010
        namespace: "{{ openshift_namespace }}"
      spec:
        replicas: 2
        strategy:
          type: RollingUpdate
          rollingUpdate:
            maxUnavailable: 1
        selector:
          matchLabels:
            app: web2010
        template:
          metadata:
            labels:
              app: web2010
          spec:
            serviceAccountName: web2010
            containers:
              - image: "{{ app_image_source }}"
                imagePullPolicy: Always
                name: web2010
                ports:
                  - containerPort: 8080
                resources:
                  requests:
                    cpu: "50m"
                    memory: "32Mi"
                  limits:
                    cpu: "250m"
                    memory: "256Mi"
                readinessProbe:
                  httpGet:
                    path: /
                    port: 8080
                    scheme: HTTP
                  initialDelaySeconds: 5
                  timeoutSeconds: 3
                livenessProbe:
                  httpGet:
                    path: /
                    port: 8080
                    scheme: HTTP
                  initialDelaySeconds: 5
                  timeoutSeconds: 3

- name: Service
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: web2010
        namespace: "{{ openshift_namespace }}"
      spec:
        type: ClusterIP
        ports:
          - name: http
            port: 8080
            protocol: TCP
            targetPort: 8080
        selector:
          app: web2010

- name: App restart
  when: >-
    "app.restart" in ansible_run_tags
  kubernetes.core.k8s:
    state: patched
    kind: Deployment
    definition:
      metadata:
        name: web2010
        namespace: "{{ openshift_namespace }}"
      spec:
        template:
          metadata:
            annotations:
              last-restart: '{{ ansible_date_time.iso8601 }}'
  tags: app.restart
